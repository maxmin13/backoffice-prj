CREATE SEQUENCE UserSeq START WITH 100 INCREMENT BY 1;
CREATE SEQUENCE AddressSeq START WITH 100 INCREMENT BY 1;
CREATE TABLE Department (Id INT(11), Name VARCHAR(60) NOT NULL, CreatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, CreatedBy VARCHAR(60), PRIMARY KEY (Id), UNIQUE (Name));
CREATE TABLE User (Id INT(11), AccountName VARCHAR(60) NOT NULL, FirstName VARCHAR(60) NOT NULL, LastName VARCHAR(60) NOT NULL, DepartmentId INT(11) NOT NULL, BirthDate DATE NOT NULL, CreatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, CreatedBy VARCHAR(60), Version INT NOT NULL DEFAULT 0, PRIMARY KEY (Id), UNIQUE (AccountName), CONSTRAINT fk_user_department FOREIGN KEY (DepartmentId) REFERENCES Department (Id));
CREATE TABLE Role (Id INT(11), Name VARCHAR(20) NOT NULL, CreatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, CreatedBy VARCHAR(60), PRIMARY KEY (Id), UNIQUE (Name));
CREATE TABLE UserRole (UserId INT(11), RoleId INT(11), CreatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, CreatedBy VARCHAR(60), PRIMARY KEY (UserId, RoleId), CONSTRAINT fk_userrole_user FOREIGN KEY (UserId) REFERENCES User (Id), CONSTRAINT fk_userrole_role FOREIGN KEY (RoleId) REFERENCES Role (Id));
CREATE TABLE State (Id INT(11) NOT NULL, Name VARCHAR(60) NOT NULL, Code CHAR(2) NOT NULL, CreatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, CreatedBy VARCHAR(60), PRIMARY KEY (Id), UNIQUE (Code), UNIQUE (Name));
CREATE TABLE Address (Id INT(11), Description VARCHAR(120) NOT NULL, City VARCHAR(100) NOT NULL, StateId INT(11) NOT NULL, Region VARCHAR(100) NOT NULL, PostalCode VARCHAR(16) NOT NULL, CreatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, CreatedBy VARCHAR(60), Version INT NOT NULL DEFAULT 0, PRIMARY KEY (Id), UNIQUE (PostalCode), CONSTRAINT fk_address_state FOREIGN KEY (StateId) REFERENCES State (Id));
CREATE TABLE UserAddress (UserId INT(11), AddressId INT(11), CreatedAt TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP, CreatedBy VARCHAR(60), PRIMARY KEY (UserId, AddressId), CONSTRAINT fk_user_address_user FOREIGN KEY (UserId) REFERENCES User(Id), CONSTRAINT fk_user_address_address FOREIGN KEY (AddressId) REFERENCES Address(Id));