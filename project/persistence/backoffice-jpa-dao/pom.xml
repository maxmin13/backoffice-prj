<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="https://maven.apache.org/POM/4.0.0"
	xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance">

	<modelVersion>4.0.0</modelVersion>
	<packaging>jar</packaging>

	<parent>
		<groupId>it.maxmin</groupId>
		<artifactId>backoffice-prj</artifactId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>../../pom.xml</relativePath>
	</parent>

	<groupId>it.maxmin.persistence</groupId>
	<artifactId>backoffice-jpa-dao</artifactId>
	<name>backoffice-jpa-dao</name>

	<properties>
		<docker.mariadb.image.name>database_mariadb</docker.mariadb.image.name>
		<docker.mariadb.container.name>local-mariadb</docker.mariadb.container.name>
		<docker.mariadb.subnet>172.20.0.0/16</docker.mariadb.subnet>
		<docker.mariadb.ip.address>172.20.128.2</docker.mariadb.ip.address>
		<docker.mariadb.database.name>backofficedb</docker.mariadb.database.name>
		<docker.mariadb.database.port>3306</docker.mariadb.database.port>
		<docker.mariadb.database.root.password>rootpwd</docker.mariadb.database.root.password>
		<docker.mariadb.database.admin.user>admin</docker.mariadb.database.admin.user>
		<docker.mariadb.database.admin.password>adminpwd</docker.mariadb.database.admin.password>
	</properties>

	<dependencies>

		<!-- backoffice modules -->
		<dependency>
			<groupId>it.maxmin.common</groupId>
			<artifactId>backoffice-common</artifactId>
		</dependency>

		<dependency>
			<groupId>it.maxmin.domain</groupId>
			<artifactId>backoffice-jpa-dao-model</artifactId>
		</dependency>

		<!-- spring framework libraries -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>

		<!-- Hibernate lib -->
		<dependency>
			<groupId>org.hibernate.orm</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>

		<dependency>
			<groupId>jakarta.annotation</groupId>
			<artifactId>jakarta.annotation-api</artifactId>
		</dependency>

		<!-- logging lib -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<!-- Database driver libs -->
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
		</dependency>

		<!-- Test dependencies -->

		<dependency>
			<groupId>it.maxmin.domain</groupId>
			<artifactId>backoffice-jpa-dao-model</artifactId>
			<version>${project.version}</version>
			<classifier>tests</classifier>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>it.maxmin.common</groupId>
			<artifactId>backoffice-common</artifactId>
			<version>${project.version}</version>
			<classifier>tests</classifier>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit-platform-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-spring</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.craftercms.mariaDB4j</groupId>
			<artifactId>mariaDB4j-springboot</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.github.h-thurow</groupId>
			<artifactId>simple-jndi</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<profiles>
		<profile>
			<id>deployment</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>${project.basedir}/src/main/resources</directory>
						<excludes>
							<!-- no properties files in the jar -->
							<exclude>**/*.properties</exclude>
						</excludes>
					</resource>
				</resources>
			</build>
		</profile>
		<profile>
			<id>integration-tests</id>
			<activation>
				<activeByDefault>false</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<configuration>
							<trimStackTrace>false</trimStackTrace>
						</configuration>
						<executions>
							<execution>
								<id>integration-tests</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<includes>
										<include>**/*ITRunner.java</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.dkanejs.maven.plugins</groupId>
						<artifactId>docker-compose-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>up</id>
								<phase>package</phase>
								<goals>
									<goal>up</goal>
								</goals>
								<configuration>
									<envVars>
										<subnet>${docker.mariadb.subnet}</subnet>
										<ipAddress>${docker.mariadb.ip.address}</ipAddress>
										<containerName>
											${docker.mariadb.container.name}</containerName>
										<db>${docker.mariadb.database.name}</db>
										<dbPort>${docker.mariadb.database.port}</dbPort>
										<dbRootPassword>
											${docker.mariadb.database.root.password}</dbRootPassword>
										<dbUser>
											${docker.mariadb.database.admin.user}</dbUser>
										<dbUserPasword>
											${docker.mariadb.database.admin.password}</dbUserPasword>
									</envVars>
									<composeFile>
										${project.basedir}/src/test/resources/database/docker-compose.yml</composeFile>
									<detachedMode>true</detachedMode>
								</configuration>
							</execution>
							<execution>
								<id>down</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>down</goal>
								</goals>
								<configuration>
									<envVars>
										<subnet>${docker.mariadb.subnet}</subnet>
										<ipAddress>${docker.mariadb.ip.address}</ipAddress>
										<containerName>
											${docker.mariadb.container.name}</containerName>
										<db>${docker.mariadb.database.name}</db>
										<dbPort>${docker.mariadb.database.port}</dbPort>
										<dbRootPassword>
											${docker.mariadb.database.root.password}</dbRootPassword>
										<dbUser>
											${docker.mariadb.database.admin.user}</dbUser>
										<dbUserPasword>
											${docker.mariadb.database.admin.password}</dbUserPasword>
									</envVars>
									<composeFile>
										${project.basedir}/src/test/resources/database/docker-compose.yml</composeFile>
									<removeVolumes>true</removeVolumes>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<!-- stops the execution of the integration tests until
						Mariadb is ready -->
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>pre-integration-test</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<exec executable="/bin/bash">
											<arg
												value="src/test/resources/waitDBready.sh" />
											<arg
												value="${docker.mariadb.image.name}" />
											<arg
												value="${docker.mariadb.ip.address}" />
											<arg
												value="${docker.mariadb.database.name}" />
											<arg
												value="${docker.mariadb.database.admin.user}" />
											<arg
												value="${docker.mariadb.database.admin.password}" />
										</exec>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<!--
		<plugin>
			<groupId>io.fabric8</groupId>
			<artifactId>docker-maven-plugin</artifactId>
			<executions>
			    <execution>
			       <id>start</id>
			       <phase>pre-integration-test</phase>
			       <goals>
			         <goal>build</goal>
			         <goal>start</goal>
			       </goals>
			    </execution>
			   <execution>
			       <id>stop</id>
			       <phase>post-integration-test</phase>
			       <goals>
			         <goal>stop</goal>
			      </goals>
			    </execution>
		  	</executions>
			<configuration>
				<verbose>true</verbose>
				<removeAll>true</removeAll>
				<images>
					<image>
						<name>mariadb-integration</name>
						<alias>mariadb-integration</alias>
						<run>
	                        <wait> 
					          <time>30000</time>
					        </wait>
	                	</run>
						<build>
							<contextDir>${project.basedir}/src/test/resources/database</contextDir>
							<dockerFile>Dockerfile</dockerFile>
							<tags>
								<tag>latest</tag>
							</tags>
						</build>
					</image>
				</images>
				<buildArgs>
					<DB>backofficedb</DB>
					<DB_PORT>3306</DB_PORT>
					<DB_ROOT_PASSWORD>rootpwd</DB_ROOT_PASSWORD>
					<DB_USER>admin</DB_USER>
					<DB_USER_PASSWORD>adminpwd</DB_USER_PASSWORD>
				</buildArgs>
			</configuration>
		</plugin>
	-->
</project>
