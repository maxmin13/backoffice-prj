<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="https://maven.apache.org/POM/4.0.0"
	xmlns:xsi="https://www.w3.org/2001/XMLSchema-instance">

	<modelVersion>4.0.0</modelVersion>
	<packaging>jar</packaging>

	<parent>
		<groupId>it.maxmin</groupId>
		<artifactId>backoffice-prj</artifactId>
		<version>1.0-SNAPSHOT</version>
		<relativePath>../../pom.xml</relativePath>
	</parent>

	<groupId>it.maxmin.persistence</groupId>
	<artifactId>backoffice-jpa-dao</artifactId>
	<name>backoffice-jpa-dao</name>

	<dependencies>

		<!-- backoffice modules -->
		<dependency>
			<groupId>it.maxmin.common</groupId>
			<artifactId>backoffice-common</artifactId>
		</dependency>

		<dependency>
			<groupId>it.maxmin.domain</groupId>
			<artifactId>backoffice-jpa-dao-model</artifactId>
		</dependency>

		<!-- spring framework libraries -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
		</dependency>

		<!-- Hibernate lib -->
		<dependency>
			<groupId>org.hibernate.orm</groupId>
			<artifactId>hibernate-core</artifactId>
		</dependency>

		<dependency>
			<groupId>jakarta.annotation</groupId>
			<artifactId>jakarta.annotation-api</artifactId>
		</dependency>

		<!-- logging lib -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<!-- Database driver libs -->
		<dependency>
			<groupId>org.mariadb.jdbc</groupId>
			<artifactId>mariadb-java-client</artifactId>
		</dependency>

		<!-- Test dependencies -->

		<dependency>
			<groupId>it.maxmin.domain</groupId>
			<artifactId>backoffice-jpa-dao-model</artifactId>
			<version>${project.version}</version>
			<classifier>tests</classifier>
			<type>test-jar</type>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-params</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit-platform-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-spring</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.craftercms.mariaDB4j</groupId>
			<artifactId>mariaDB4j-springboot</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.github.h-thurow</groupId>
			<artifactId>simple-jndi</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<profiles>
		<profile>
			<id>deployment</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>${project.basedir}/src/main/resources</directory>
						<excludes>
							<!-- no properties files in the jar -->
							<exclude>**/*.properties</exclude>
						</excludes>
					</resource>
				</resources>
			</build>
		</profile>
	</profiles>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<includes>
						<include>**/*ITRunner.java</include>
					</includes>
				</configuration>
			</plugin>
				                <!--
			<plugin>
	            <groupId>com.dkanejs.maven.plugins</groupId>
	            <artifactId>docker-compose-maven-plugin</artifactId>
	            <executions>
					<execution>
	                    <id>up</id>
	                    <phase>pre-integration-test</phase>
	                    <goals>
	                        <goal>up</goal>
	                    </goals>
	                    <configuration>
	                        <composeFile>${project.basedir}/src/test/resources/database/docker-compose.yml</composeFile>
	                        <detachedMode>true</detachedMode>
	                    </configuration>
	                </execution>
	                <execution>
	                    <id>down</id>
	                    <phase>post-integration-test</phase>
	                    <goals>
	                        <goal>down</goal>
	                    </goals>
	                    <configuration>
	                        <composeFile>${project.basedir}/src/test/resources/database/docker-compose.yml</composeFile>
	                        <removeVolumes>true</removeVolumes>
	                    </configuration>
	                </execution>  
	            </executions>
	        </plugin>
	         -->	  
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<executions>
				    <execution>
				       <id>start</id>
				       <phase>pre-integration-test</phase>
				       <goals>
				         <goal>build</goal>
				         <goal>start</goal>
				       </goals>
				    </execution>
				   <execution>
				       <id>stop</id>
				       <phase>post-integration-test</phase>
				       <goals>
				         <goal>stop</goal>
				      </goals>
				    </execution>
			  	</executions>
				<configuration>
					<verbose>true</verbose>
    				<removeAll>true</removeAll>
					<images>
						<image>
							<name>mariadb-integration</name>
							<alias>mariadb-integration</alias>
							<run>
	                            <wait> 
						          <time>30000</time>
						        </wait>
                        	</run>
							<build>
								<contextDir>${project.basedir}/src/test/resources/database</contextDir>
								<dockerFile>Dockerfile</dockerFile>
								<tags>
									<tag>latest</tag>
								</tags>
							</build>
						</image>
					</images>
					<buildArgs>
						<DB>backofficedb</DB>
						<DB_PORT>3306</DB_PORT>
						<DB_ROOT_PASSWORD>rootpwd</DB_ROOT_PASSWORD>
						<DB_USER>admin</DB_USER>
						<DB_USER_PASSWORD>adminpwd</DB_USER_PASSWORD>
					</buildArgs>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
